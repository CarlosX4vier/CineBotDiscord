<!DOCTYPE html>
<html>

<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

</head>

<body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>
    <%- teste %>
    <script>
        // 2. This code loads the IFrame Player API code asynchronously.
        var tag = document.createElement('script');
        const urlParams = new URLSearchParams(window.location.search);
        const sala = urlParams.get('sala');
        var socket = io.connect("http://192.168.0.106:3000?sala=" + sala);
        var playerPronto = false;
        socket.on("connect", () => {
            console.log("Conectado");
            if (playerPronto) {
                player.playVideo();
            }
        });
        $(document).ready(function () {

            socket.on("disconnect", () => {
                player.pauseVideo();
                player.seekTo(0);

            });

            socket.on("time", (data) => {
                if (playerPronto) {
                    if (player.getVideoData()['video_id'] != data.video) {
                        player.loadVideoById({ 'videoId': data.video });
                    }
                    if (Math.floor(player.getCurrentTime()) != data.duracao - 1) {
                        console.log(Math.floor(player.getCurrentTime()) + " " + data.duracao);
                        player.seekTo(data.duracao);
                    }
                }
            });

        });


        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '360',
                width: '640',
                videoId: '',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            playerPronto = true;
            event.target.playVideo();
        }

        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING && !done) {
                //setTimeout(stopVideo, 6000);
                // done = true;
            }
        }
        function stopVideo() {
            player.stopVideo();
        }

    </script>

</body>

</html>