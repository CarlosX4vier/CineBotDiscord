<!DOCTYPE html>
<html>

<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <title> <%- teste %> </title>
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        #apoiadores {
            float: left;
            margin-top: 10vw;
            transform: skew(-11deg, 8deg);
            margin-left: 4vw;
            font-size: 1.2vw;
        }

        .fundo {
            background: url(https://media.discordapp.net/attachments/280129143255990275/587792451457253393/Vista_3D_9.jpg) black;
            background-size: 100vw;
            background-repeat: no-repeat;
            width: 100vw;
            height: 100vh;
        }
    </style>
</head>

<body>
    <div style="height: 100% !important;">
        <div class="fundo">
            <div id="apoiadores">
                Lista de apoiadores
                <ul>
                    <li>Carlos</li>
                </ul>

            </div>
            <div id="video" style="width: 50vw;height: 26.5vw;padding-top: 5vw;margin: 0 auto;">
                <div id="player"></div>
            </div>
        </div>
    </div>

    <script>
        var tag = document.createElement('script');
        const urlParams = new URLSearchParams(window.location.search);
        const sala = urlParams.get('sala');
        var socket = io.connect("<%- site %>?sala=" + sala);

        var playerPronto = false;

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '100%',
                width: '100%',
                videoId: '',
                playerVars: { 'controls': 0, 'modestbranding': 0, 'rel': 0, 'showinfo': 0 },
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange,
                    'onError': onError
                }
            });
        }

        function socketManager() {

            var tag = document.createElement('script');
            const urlParams = new URLSearchParams(window.location.search);
            const sala = urlParams.get('sala');
            var socket = io.connect("<%- site %>?sala=" + sala);

            socket.on("connect", () => {
                console.log("Conectado");
            });

            socket.on("reconnect",()=>{
                player.playVideo();
            })
            
            socket.on("volume", (data) => {
                console.log("Volume:" + data.volume)
                if (playerPronto) {
                    if (player.getVolume() != data.volume) {
                        player.setVolume(data.volume);
                    }
                }
            })

            socket.on("video", async (data) => {

                console.log("Video: " + data.video)
                dados = await player.getVideoData();
                console.log(dados)
                if (dados['video_id'] != data.video) {
                    $("#video").show();
                    player.loadVideoById({ 'videoId': data.video });
                }
            });

            socket.on("disconnect", () => {
                player.seekTo(0);
                player.stopVideo();
            });

            socket.on("time", (data) => {
                console.log(Math.floor(player.getCurrentTime()) + " " + data.duracao);

                if (playerPronto) {
                    $("#video").show();
                    if (Math.floor(player.getCurrentTime()) != data.duracao - 1) {
                        console.log(Math.floor(player.getCurrentTime()) + " " + data.duracao);
                        player.seekTo(data.duracao);
                    }
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            playerPronto = true;
            console.log("PlayerPronto")
            event.target.playVideo();
            socketManager();

        }

        function onError(event) {
            $("#video").hide();
        }

        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING) {
                $("#video").show();
            }
            if (event.data == YT.PlayerState.PAUSED) {
                player.playVideo();
            }
            if (event.data == YT.PlayerState.ENDED || event.data == YT.PlayerState.CUED) {
                console.log("terminou");
                $("#video").hide();
            }
        }
    </script>

</body>

</html>