<!DOCTYPE html>
<html>

<head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <style>
        body {
            background: url(https://media.discordapp.net/attachments/280129143255990275/587792451457253393/Vista_3D_9.jpg) cadetblue;
            background-size: 100%;
            background-repeat: no-repeat;
        }
    </style>
</head>

<body>
    <div style="margin: 0 auto;
        width: 55%; /* Valor da Largura */
        height: 65vh !important;
    
    ">
        <div id="player"></div>
    </div>
    <%- teste %>
    <script>
        var tag = document.createElement('script');
        const urlParams = new URLSearchParams(window.location.search);
        const sala = urlParams.get('sala');
        var socket = io.connect("<%- site %>?sala=" + sala);
        var playerPronto = false;

        socket.on("connect", () => {
            console.log("Conectado");
            if (playerPronto) {
                player.playVideo();
            }
        });
        $(document).ready(function () {
            socket.on("disconnect", () => {
                player.stopVideo();
                player.seekTo(0);
            });

            socket.on("time", (data) => {
                if (playerPronto) {
                    $("#player").show();
                    if (player.getVideoData()['video_id'] != data.video) {
                        player.loadVideoById({ 'videoId': data.video });
                    }
                    if (Math.floor(player.getCurrentTime()) != data.duracao - 1) {
                        console.log(Math.floor(player.getCurrentTime()) + " " + data.duracao);
                        player.seekTo(data.duracao);
                    }
                }
            });

        });


        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '100%',
                width: '100%',
                videoId: '',
                playerVars: { 'controls': 0, 'modestbranding': 1, 'rel': 0, 'showinfo': 0 },
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange,
                    'onError': onError
                }
            });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
            playerPronto = true;
            event.target.playVideo();

        }

        function onError(event) {
            $("#player").hide();
        }

        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.PLAYING && playerPronto) {
                //setTimeout(stopVideo, 6000);
                $("#player").show();
                // done = true;
            }
            if (event.data == 0 || event.data == 5 || event.data == -1) {
                console.log("terminou");
                $("#player").hide();
            }
            console.log(event.data);
        }


    </script>

</body>

</html>